stages:
  - build
  - test
  - deploy

build_site:
  image:
    name: klakegg/hugo:ext-alpine
    # https://github.com/klakegg/docker-hugo/issues/13#issuecomment-678304121
    entrypoint: [""]
  stage: build
  script:
    - hugo
  artifacts:
    paths:
      - public # generating site folder to be browsed or download
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    HUGO_ENV: production

html5validator:
  image: cyb3rjak3/html5validator
  stage: test
  script:
    - tests/html_validate_test

hyperlink-check:
  variables:
    # No need to clone git, we just need the public/ folder.
    GIT_STRATEGY: none
  # The hyperlink binary is dynamically linked against libc, so we can't use
  # Alpine (which uses musl).
  image: debian:bullseye-20220125
  stage: test
  script:
    # Manually download the binary, until a docker image is offered:
    # https://github.com/untitaker/hyperlink/issues/113
    - apt update && apt install -y curl
    - curl -L -o hyperlink https://github.com/untitaker/hyperlink/releases/download/0.1.20/hyperlink-linux-x86_64
    - chmod +x hyperlink
    - ./hyperlink public/

# 'pages' is a specially-named job that will deploy and build your site to the
# 'public' path to GitLab Pages.
pages:
  image:
    name: klakegg/hugo:ext-alpine
    # https://github.com/klakegg/docker-hugo/issues/13#issuecomment-678304121
    entrypoint: [""]
  stage: deploy
  script:
    # https://github.com/klakegg/docker-hugo/issues/41#issuecomment-805607666
    - apk add --update brotli
    - hugo
    # https://docs.gitlab.com/ee/user/project/pages/introduction.html#serving-compressed-assets
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\|json\)$' -exec gzip --best -f -k {} \;
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\|json\)$' -exec brotli -f -k {} \;
  artifacts:
    paths:
      - public
  only:
    - main # this job will affect only the 'main' branch
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    HUGO_ENV: production

